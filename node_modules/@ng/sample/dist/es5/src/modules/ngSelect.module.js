import * as ɵngcc0 from '@angular/core';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgSelectValuePipe } from '../pipes/ngSelectValue.pipe';
import { OptGroupComponent } from '../components/option/optgroup.component';
import { OptionComponent } from '../components/option/option.component';
import { NgCommonComponent } from '../components/ngCommon/ngCommon.component';
/**
 * Module for select and its options
 */
var NgSelectModule = /** @class */ (function () {
    function NgSelectModule() {
    }
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgSelectModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    OptionComponent,
                    OptGroupComponent,
                    NgSelectValuePipe,
                    NgCommonComponent
                ],
                exports: [
                    OptionComponent,
                    OptGroupComponent,
                    NgSelectValuePipe,
                    NgCommonComponent
                ]
            }]
    }], function () { return []; }, null);
NgSelectModule.ngModuleDef = ɵngcc0.ɵdefineNgModule({ type: NgSelectModule, declarations: function () { return [OptionComponent,
        OptGroupComponent,
        NgSelectValuePipe,
        NgCommonComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [OptionComponent,
        OptGroupComponent,
        NgSelectValuePipe,
        NgCommonComponent]; } });
NgSelectModule.ngInjectorDef = ɵngcc0.defineInjector({ factory: function NgSelectModule_Factory(t) { return new (t || NgSelectModule)(); }, providers: [], imports: [[
            CommonModule
        ],
        [
            OptionComponent,
            OptGroupComponent,
            NgSelectValuePipe,
            NgCommonComponent
        ]] });
    return NgSelectModule;
}());
export { NgSelectModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2dpdC9pdnktY29kZS1zaXplL25vZGVfbW9kdWxlcy9Abmcvc2FtcGxlL2Rpc3QvZXM1L3NyYy9tb2R1bGVzL25nU2VsZWN0Lm1vZHVsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztLQWVLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Y0FtQkMiLCJmaWxlIjoiRjovZ2l0L2l2eS1jb2RlLXNpemUvbm9kZV9tb2R1bGVzL0BuZy9zYW1wbGUvZGlzdC9lczUvc3JjL21vZHVsZXMvbmdTZWxlY3QubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdTZWxlY3RWYWx1ZVBpcGUgfSBmcm9tICcuLi9waXBlcy9uZ1NlbGVjdFZhbHVlLnBpcGUnO1xyXG5pbXBvcnQgeyBPcHRHcm91cENvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvb3B0aW9uL29wdGdyb3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9wdGlvbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvb3B0aW9uL29wdGlvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ0NvbW1vbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvbmdDb21tb24vbmdDb21tb24uY29tcG9uZW50JztcclxuLyoqXHJcbiAqIE1vZHVsZSBmb3Igc2VsZWN0IGFuZCBpdHMgb3B0aW9uc1xyXG4gKi9cclxudmFyIE5nU2VsZWN0TW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTmdTZWxlY3RNb2R1bGUoKSB7XHJcbiAgICB9XHJcbiAgICBOZ1NlbGVjdE1vZHVsZS5kZWNvcmF0b3JzID0gW1xyXG4gICAgICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0czogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb21tb25Nb2R1bGVcclxuICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBPcHRpb25Db21wb25lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9wdEdyb3VwQ29tcG9uZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBOZ1NlbGVjdFZhbHVlUGlwZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmdDb21tb25Db21wb25lbnRcclxuICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgT3B0aW9uQ29tcG9uZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBPcHRHcm91cENvbXBvbmVudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmdTZWxlY3RWYWx1ZVBpcGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5nQ29tbW9uQ29tcG9uZW50XHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxdIH1cclxuICAgIF07XHJcbiAgICByZXR1cm4gTmdTZWxlY3RNb2R1bGU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IE5nU2VsZWN0TW9kdWxlIH07XHIiXX0=