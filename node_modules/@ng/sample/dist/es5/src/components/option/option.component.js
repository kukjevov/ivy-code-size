import * as ɵngcc0 from '@angular/core';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from "@angular/core";
/**
 * Component used for options in select component
 * @template TValue
 */
var OptionComponent = /** @class */ (function () {
    function OptionComponent() {
        //######################### public properties - template bindings #########################
        //######################### public properties - template bindings #########################
        /**
         * Indication whether is item active
         */
        this.active = false;
        /**
         * Indication whether this option is selected
         */
        this.selected = false;
        //######################### public properties #########################
        /**
         * If specified this option will be displayed in group
         */
        this.group = null;
    }
    OptionComponent.propDecorators = {
        value: [{ type: Input }],
        text: [{ type: Input }]
    };
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(OptionComponent, [{
        type: Component,
        args: [{
                selector: 'ng-select option',
                template: '',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { active: [], selected: [], group: [], value: [{
            type: Input
        }], text: [{
            type: Input
        }] });
OptionComponent.ngComponentDef = ɵngcc0.ɵdefineComponent({ type: OptionComponent, selectors: [["option"]], factory: function OptionComponent_Factory(t) { return new (t || OptionComponent)(); }, inputs: { value: "value", text: "text" }, consts: 0, vars: 0, template: function OptionComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
    return OptionComponent;
}());
export { OptionComponent };
if (false) {
    /**
     * Indication whether is item active
     * @type {?}
     */
    OptionComponent.prototype.active;
    /**
     * Indication whether this option is selected
     * @type {?}
     */
    OptionComponent.prototype.selected;
    /**
     * Value that will be used if this option will be selected
     * @type {?}
     */
    OptionComponent.prototype.value;
    /**
     * Text that is displayed if this value is selected
     * @type {?}
     */
    OptionComponent.prototype.text;
    /**
     * If specified this option will be displayed in group
     * @type {?}
     */
    OptionComponent.prototype.group;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2dpdC9pdnktY29kZS1zaXplL25vZGVfbW9kdWxlcy9Abmcvc2FtcGxlL2Rpc3QvZXM1L3NyYy9jb21wb25lbnRzL29wdGlvbi9vcHRpb24uY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0EwQkssQUFPQzs7Ozs7Ozs7Ozs7Ozs7Ozs7a1dBSUEiLCJmaWxlIjoiRjovZ2l0L2l2eS1jb2RlLXNpemUvbm9kZV9tb2R1bGVzL0BuZy9zYW1wbGUvZGlzdC9lczUvc3JjL2NvbXBvbmVudHMvb3B0aW9uL29wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXHJcbiAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbi8qKlxyXG4gKiBDb21wb25lbnQgdXNlZCBmb3Igb3B0aW9ucyBpbiBzZWxlY3QgY29tcG9uZW50XHJcbiAqIEB0ZW1wbGF0ZSBUVmFsdWVcclxuICovXHJcbnZhciBPcHRpb25Db21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBPcHRpb25Db21wb25lbnQoKSB7XHJcbiAgICAgICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBwcm9wZXJ0aWVzIC0gdGVtcGxhdGUgYmluZGluZ3MgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgcHJvcGVydGllcyAtIHRlbXBsYXRlIGJpbmRpbmdzICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBJbmRpY2F0aW9uIHdoZXRoZXIgaXMgaXRlbSBhY3RpdmVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluZGljYXRpb24gd2hldGhlciB0aGlzIG9wdGlvbiBpcyBzZWxlY3RlZFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgcHVibGljIHByb3BlcnRpZXMgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElmIHNwZWNpZmllZCB0aGlzIG9wdGlvbiB3aWxsIGJlIGRpc3BsYXllZCBpbiBncm91cFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgT3B0aW9uQ29tcG9uZW50LmRlY29yYXRvcnMgPSBbXHJcbiAgICAgICAgeyB0eXBlOiBDb21wb25lbnQsIGFyZ3M6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICduZy1zZWxlY3Qgb3B0aW9uJyxcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxuICAgICAgICAgICAgICAgIH1dIH1cclxuICAgIF07XHJcbiAgICBPcHRpb25Db21wb25lbnQucHJvcERlY29yYXRvcnMgPSB7XHJcbiAgICAgICAgdmFsdWU6IFt7IHR5cGU6IElucHV0IH1dLFxyXG4gICAgICAgIHRleHQ6IFt7IHR5cGU6IElucHV0IH1dXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE9wdGlvbkNvbXBvbmVudDtcclxufSgpKTtcclxuZXhwb3J0IHsgT3B0aW9uQ29tcG9uZW50IH07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbmRpY2F0aW9uIHdoZXRoZXIgaXMgaXRlbSBhY3RpdmVcclxuICAgICAqIEB0eXBlIHs/fVxyXG4gICAgICovXHJcbiAgICBPcHRpb25Db21wb25lbnQucHJvdG90eXBlLmFjdGl2ZTtcclxuICAgIC8qKlxyXG4gICAgICogSW5kaWNhdGlvbiB3aGV0aGVyIHRoaXMgb3B0aW9uIGlzIHNlbGVjdGVkXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqL1xyXG4gICAgT3B0aW9uQ29tcG9uZW50LnByb3RvdHlwZS5zZWxlY3RlZDtcclxuICAgIC8qKlxyXG4gICAgICogVmFsdWUgdGhhdCB3aWxsIGJlIHVzZWQgaWYgdGhpcyBvcHRpb24gd2lsbCBiZSBzZWxlY3RlZFxyXG4gICAgICogQHR5cGUgez99XHJcbiAgICAgKi9cclxuICAgIE9wdGlvbkNvbXBvbmVudC5wcm90b3R5cGUudmFsdWU7XHJcbiAgICAvKipcclxuICAgICAqIFRleHQgdGhhdCBpcyBkaXNwbGF5ZWQgaWYgdGhpcyB2YWx1ZSBpcyBzZWxlY3RlZFxyXG4gICAgICogQHR5cGUgez99XHJcbiAgICAgKi9cclxuICAgIE9wdGlvbkNvbXBvbmVudC5wcm90b3R5cGUudGV4dDtcclxuICAgIC8qKlxyXG4gICAgICogSWYgc3BlY2lmaWVkIHRoaXMgb3B0aW9uIHdpbGwgYmUgZGlzcGxheWVkIGluIGdyb3VwXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqL1xyXG4gICAgT3B0aW9uQ29tcG9uZW50LnByb3RvdHlwZS5ncm91cDtcclxufVxyIl19