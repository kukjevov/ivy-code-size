import * as ɵngcc0 from '@angular/core';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgSelectValuePipe } from '../pipes/ngSelectValue.pipe';
import { OptGroupComponent } from '../components/option/optgroup.component';
import { OptionComponent } from '../components/option/option.component';
/**
 * Module for select and its options
 */
export class NgSelectModule {
}
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgSelectModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    OptionComponent,
                    OptGroupComponent,
                    NgSelectValuePipe
                ],
                exports: [
                    OptionComponent,
                    OptGroupComponent,
                    NgSelectValuePipe
                ]
            }]
    }], null, null);
NgSelectModule.ngModuleDef = ɵngcc0.ɵdefineNgModule({ type: NgSelectModule, declarations: [OptionComponent,
        OptGroupComponent,
        NgSelectValuePipe], imports: [CommonModule], exports: [OptionComponent,
        OptGroupComponent,
        NgSelectValuePipe] });
NgSelectModule.ngInjectorDef = ɵngcc0.defineInjector({ factory: function NgSelectModule_Factory(t) { return new (t || NgSelectModule)(); }, providers: [], imports: [[
            CommonModule
        ],
        [
            OptionComponent,
            OptGroupComponent,
            NgSelectValuePipe
        ]] });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2dpdC9pdnktY29kZS1zaXplL25vZGVfbW9kdWxlcy9Abmcvc2FtcGxlL2Rpc3QvZXMyMDE1L3NyYy9tb2R1bGVzL25nU2VsZWN0Lm1vZHVsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBYUMsYUFpQkMiLCJmaWxlIjoiRjovZ2l0L2l2eS1jb2RlLXNpemUvbm9kZV9tb2R1bGVzL0BuZy9zYW1wbGUvZGlzdC9lczIwMTUvc3JjL21vZHVsZXMvbmdTZWxlY3QubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdTZWxlY3RWYWx1ZVBpcGUgfSBmcm9tICcuLi9waXBlcy9uZ1NlbGVjdFZhbHVlLnBpcGUnO1xyXG5pbXBvcnQgeyBPcHRHcm91cENvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvb3B0aW9uL29wdGdyb3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9wdGlvbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvb3B0aW9uL29wdGlvbi5jb21wb25lbnQnO1xyXG4vKipcclxuICogTW9kdWxlIGZvciBzZWxlY3QgYW5kIGl0cyBvcHRpb25zXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTmdTZWxlY3RNb2R1bGUge1xyXG59XHJcbk5nU2VsZWN0TW9kdWxlLmRlY29yYXRvcnMgPSBbXHJcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xyXG4gICAgICAgICAgICAgICAgaW1wb3J0czogW1xyXG4gICAgICAgICAgICAgICAgICAgIENvbW1vbk1vZHVsZVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgIE9wdGlvbkNvbXBvbmVudCxcclxuICAgICAgICAgICAgICAgICAgICBPcHRHcm91cENvbXBvbmVudCxcclxuICAgICAgICAgICAgICAgICAgICBOZ1NlbGVjdFZhbHVlUGlwZVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgICAgICAgICBPcHRpb25Db21wb25lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgT3B0R3JvdXBDb21wb25lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgTmdTZWxlY3RWYWx1ZVBpcGVcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxdIH0sXHJcbl07XHIiXX0=