import * as ɵngcc0 from '@angular/core';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Input } from "@angular/core";
/**
 * Component used for options in select component
 * @template TValue
 */
export class OptionComponent {
    constructor() {
        //######################### public properties - template bindings #########################
        //######################### public properties - template bindings #########################
        /**
         * Indication whether is item active
         */
        this.active = false;
        /**
         * Indication whether this option is selected
         */
        this.selected = false;
        //######################### public properties #########################
        /**
         * If specified this option will be displayed in group
         */
        this.group = null;
    }
}
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(OptionComponent, [{
        type: Component,
        args: [{
                selector: 'ng-select option',
                template: '',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { constructor: [], active: [], selected: [], group: [], value: [{
            type: Input
        }], text: [{
            type: Input
        }] });
OptionComponent.ngComponentDef = ɵngcc0.ɵdefineComponent({ type: OptionComponent, selectors: [["option"]], factory: function OptionComponent_Factory(t) { return new (t || OptionComponent)(); }, inputs: { value: "value", text: "text" }, consts: 0, vars: 0, template: function OptionComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
OptionComponent.propDecorators = {
    value: [{ type: Input }],
    text: [{ type: Input }]
};
if (false) {
    /**
     * Indication whether is item active
     * @type {?}
     */
    OptionComponent.prototype.active;
    /**
     * Indication whether this option is selected
     * @type {?}
     */
    OptionComponent.prototype.selected;
    /**
     * Value that will be used if this option will be selected
     * @type {?}
     */
    OptionComponent.prototype.value;
    /**
     * Text that is displayed if this value is selected
     * @type {?}
     */
    OptionComponent.prototype.text;
    /**
     * If specified this option will be displayed in group
     * @type {?}
     */
    OptionComponent.prototype.group;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6L2dpdC9pdnktY29kZS1zaXplL25vZGVfbW9kdWxlcy9Abmcvc2FtcGxlL2Rpc3QvZXMyMDE1L3NyYy9jb21wb25lbnRzL29wdGlvbi9vcHRpb24uY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTJCQyxpV0FPQyIsImZpbGUiOiJGOi9naXQvaXZ5LWNvZGUtc2l6ZS9ub2RlX21vZHVsZXMvQG5nL3NhbXBsZS9kaXN0L2VzMjAxNS9zcmMvY29tcG9uZW50cy9vcHRpb24vb3B0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuLyoqXHJcbiAqIENvbXBvbmVudCB1c2VkIGZvciBvcHRpb25zIGluIHNlbGVjdCBjb21wb25lbnRcclxuICogQHRlbXBsYXRlIFRWYWx1ZVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE9wdGlvbkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgcHVibGljIHByb3BlcnRpZXMgLSB0ZW1wbGF0ZSBiaW5kaW5ncyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbiAgICAgICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBwcm9wZXJ0aWVzIC0gdGVtcGxhdGUgYmluZGluZ3MgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluZGljYXRpb24gd2hldGhlciBpcyBpdGVtIGFjdGl2ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW5kaWNhdGlvbiB3aGV0aGVyIHRoaXMgb3B0aW9uIGlzIHNlbGVjdGVkXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgcHJvcGVydGllcyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSWYgc3BlY2lmaWVkIHRoaXMgb3B0aW9uIHdpbGwgYmUgZGlzcGxheWVkIGluIGdyb3VwXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5ncm91cCA9IG51bGw7XHJcbiAgICB9XHJcbn1cclxuT3B0aW9uQ29tcG9uZW50LmRlY29yYXRvcnMgPSBbXHJcbiAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcclxuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnbmctc2VsZWN0IG9wdGlvbicsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG4gICAgICAgICAgICB9XSB9XHJcbl07XHJcbk9wdGlvbkNvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcclxuICAgIHZhbHVlOiBbeyB0eXBlOiBJbnB1dCB9XSxcclxuICAgIHRleHQ6IFt7IHR5cGU6IElucHV0IH1dXHJcbn07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbmRpY2F0aW9uIHdoZXRoZXIgaXMgaXRlbSBhY3RpdmVcclxuICAgICAqIEB0eXBlIHs/fVxyXG4gICAgICovXHJcbiAgICBPcHRpb25Db21wb25lbnQucHJvdG90eXBlLmFjdGl2ZTtcclxuICAgIC8qKlxyXG4gICAgICogSW5kaWNhdGlvbiB3aGV0aGVyIHRoaXMgb3B0aW9uIGlzIHNlbGVjdGVkXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqL1xyXG4gICAgT3B0aW9uQ29tcG9uZW50LnByb3RvdHlwZS5zZWxlY3RlZDtcclxuICAgIC8qKlxyXG4gICAgICogVmFsdWUgdGhhdCB3aWxsIGJlIHVzZWQgaWYgdGhpcyBvcHRpb24gd2lsbCBiZSBzZWxlY3RlZFxyXG4gICAgICogQHR5cGUgez99XHJcbiAgICAgKi9cclxuICAgIE9wdGlvbkNvbXBvbmVudC5wcm90b3R5cGUudmFsdWU7XHJcbiAgICAvKipcclxuICAgICAqIFRleHQgdGhhdCBpcyBkaXNwbGF5ZWQgaWYgdGhpcyB2YWx1ZSBpcyBzZWxlY3RlZFxyXG4gICAgICogQHR5cGUgez99XHJcbiAgICAgKi9cclxuICAgIE9wdGlvbkNvbXBvbmVudC5wcm90b3R5cGUudGV4dDtcclxuICAgIC8qKlxyXG4gICAgICogSWYgc3BlY2lmaWVkIHRoaXMgb3B0aW9uIHdpbGwgYmUgZGlzcGxheWVkIGluIGdyb3VwXHJcbiAgICAgKiBAdHlwZSB7P31cclxuICAgICAqL1xyXG4gICAgT3B0aW9uQ29tcG9uZW50LnByb3RvdHlwZS5ncm91cDtcclxufVxyIl19