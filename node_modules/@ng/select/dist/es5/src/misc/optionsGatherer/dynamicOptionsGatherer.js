var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter } from "@angular/core";
import { isPresent, isBlank } from "@asseco/common";
import { debounceTime } from "rxjs/operators";
import { LIVE_SEARCH } from "../../plugins/liveSearch/types";
/**
 * Class that is used as for options gathering in dynamic way, for example from external source when writing
 * @template TValue
 */
var /**
 * Class that is used as for options gathering in dynamic way, for example from external source when writing
 * @template TValue
 */
DynamicOptionsGatherer = /** @class */ (function () {
    //######################### constructor #########################
    function DynamicOptionsGatherer(_options) {
        this._options = _options;
        /**
         * Minimal number of characters required for searching
         */
        this._minLength = 2;
        //######################### public properties - implementation of OptionsGatherer #########################
        /**
         * Array of provided options for select
         */
        this.options = [];
        /**
         * Occurs when array of provided options has changed
         */
        this.optionsChange = new EventEmitter();
        if (!this._options) {
            throw new Error("Options can not be null!");
        }
        if (this._options && isPresent(this._options.minLength)) {
            this._minLength = this._options.minLength;
        }
    }
    Object.defineProperty(DynamicOptionsGatherer.prototype, "availableOptions", {
        /**
         * Array of visible, displayed options for select
         */
        get: /**
         * Array of visible, displayed options for select
         * @return {?}
         */
        function () {
            return this.options;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DynamicOptionsGatherer.prototype, "availableOptionsChange", {
        /**
         * Occurs when array of visible, displayed options has changed
         */
        get: /**
         * Occurs when array of visible, displayed options has changed
         * @return {?}
         */
        function () {
            return this.optionsChange;
        },
        enumerable: true,
        configurable: true
    });
    //######################### public methods - implementation of OptionsGatherer #########################
    /**
     * Initialize gatherer during initialization phase
     */
    //######################### public methods - implementation of OptionsGatherer #########################
    /**
     * Initialize gatherer during initialization phase
     * @return {?}
     */
    DynamicOptionsGatherer.prototype.initializeGatherer = 
    //######################### public methods - implementation of OptionsGatherer #########################
    /**
     * Initialize gatherer during initialization phase
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var liveSearch = (/** @type {?} */ (this.ngSelectPlugins[LIVE_SEARCH]));
        if (this._liveSearch && this._liveSearch != liveSearch) {
            this._searchValueChangeSubscription.unsubscribe();
            this._searchValueChangeSubscription = null;
            this._liveSearch = null;
        }
        if (!this._liveSearch) {
            this._liveSearch = liveSearch;
            /** @type {?} */
            var searchValueChange = this._liveSearch.searchValueChange;
            if (this._options.delay) {
                searchValueChange = searchValueChange.pipe(debounceTime(this._options.delay));
            }
            this._searchValueChangeSubscription = searchValueChange.subscribe((/**
             * @return {?}
             */
            function () { return __awaiter(_this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (isBlank(this._liveSearch.searchValue) || this._liveSearch.searchValue.length < this._minLength) {
                                this.options = [];
                                this.optionsChange.emit();
                                return [2 /*return*/];
                            }
                            _a = this;
                            return [4 /*yield*/, this._options.dynamicOptionsCallback(this._liveSearch.searchValue)];
                        case 1:
                            _a.options = _b.sent();
                            this.optionsChange.emit();
                            return [2 /*return*/];
                    }
                });
            }); }));
        }
    };
    /**
     * Called when gatherer needs to be destroyed
     */
    /**
     * Called when gatherer needs to be destroyed
     * @return {?}
     */
    DynamicOptionsGatherer.prototype.destroyGatherer = /**
     * Called when gatherer needs to be destroyed
     * @return {?}
     */
    function () {
        if (this._searchValueChangeSubscription) {
            this._searchValueChangeSubscription.unsubscribe();
            this._searchValueChangeSubscription = null;
        }
    };
    return DynamicOptionsGatherer;
}());
/**
 * Class that is used as for options gathering in dynamic way, for example from external source when writing
 * @template TValue
 */
export { DynamicOptionsGatherer };
if (false) {
    /**
     * Live search plugin currently used in NgSelect
     * @type {?}
     * @protected
     */
    DynamicOptionsGatherer.prototype._liveSearch;
    /**
     * Subscription for changes of live search value
     * @type {?}
     * @protected
     */
    DynamicOptionsGatherer.prototype._searchValueChangeSubscription;
    /**
     * Minimal number of characters required for searching
     * @type {?}
     * @protected
     */
    DynamicOptionsGatherer.prototype._minLength;
    /**
     * Array of provided options for select
     * @type {?}
     */
    DynamicOptionsGatherer.prototype.options;
    /**
     * Occurs when array of provided options has changed
     * @type {?}
     */
    DynamicOptionsGatherer.prototype.optionsChange;
    /**
     * NgSelect plugin instances available for gatherer
     * @type {?}
     */
    DynamicOptionsGatherer.prototype.ngSelectPlugins;
    /**
     * @type {?}
     * @protected
     */
    DynamicOptionsGatherer.prototype._options;
}
//# sourceMappingURL=data:application/json;base64,