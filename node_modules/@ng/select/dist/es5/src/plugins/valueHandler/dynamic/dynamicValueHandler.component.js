var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Inject, Optional, ElementRef } from '@angular/core';
import { extend, isBlank } from '@asseco/common';
import { NG_SELECT_PLUGIN_INSTANCES } from '../../../components/select/types';
import { VALUE_HANDLER_OPTIONS } from '../types';
import { ValueHandlerBase } from '../valueHandlerBase';
var ɵ0 = /**
 * @param {?} value
 * @return {?}
 */
function (value) { return value; };
/**
 * Default options for value handler
 * \@internal
 * @type {?}
 */
var defaultOptions = {
    textExtractor: (ɵ0)
};
/**
 * Component used for handling current value of NgSelect, allows values which are not present in options
 * @template TValue
 */
var DynamicValueHandlerComponent = /** @class */ (function (_super) {
    __extends(DynamicValueHandlerComponent, _super);
    //######################### constructor #########################
    function DynamicValueHandlerComponent(ngSelectPlugins, pluginElement, options) {
        var _this = _super.call(this, ngSelectPlugins, pluginElement) || this;
        //######################### protected methods #########################
        /**
         * Sets value
         */
        _this._setValue = (/**
         * @param {?} option
         * @return {?}
         */
        function (option) {
            //multiple values are allowed
            if (_this.options.multiple) {
                if (!Array.isArray(_this.selectedOptions)) {
                    _this.selectedOptions = [];
                }
                else {
                    /** @type {?} */
                    var opt_1;
                    //value exists, removing from list
                    if ((opt_1 = _this.selectedOptions.find((/**
                     * @param {?} selOpt
                     * @return {?}
                     */
                    function (selOpt) { return _this.valueComparer(selOpt.value, opt_1.value); })))) {
                        /** @type {?} */
                        var index = _this.selectedOptions.indexOf(option);
                        _this.selectedOptions.splice(index, 1);
                    }
                    //adding value
                    else {
                        _this.selectedOptions.push(option);
                    }
                }
            }
            else 
            //only signle value allowed
            {
                _this.selectedOptions = option;
            }
            _this._clearSelected();
            _this._markValueAsSelected();
            _this._normalState.invalidateVisuals();
            _this.valueChange.emit();
            //close popup if not multiple
            if (!_this.options.multiple) {
                _this.popupVisibilityRequest.emit(false);
            }
            else {
                _this._popup.invalidateVisuals();
            }
        });
        _this._options = extend(true, {}, defaultOptions, options);
        return _this;
    }
    Object.defineProperty(DynamicValueHandlerComponent.prototype, "options", {
        //######################### public properties - implementation of DynamicValueHandler #########################
        /**
         * Options for NgSelect plugin
         */
        get: 
        //######################### public properties - implementation of DynamicValueHandler #########################
        /**
         * Options for NgSelect plugin
         * @return {?}
         */
        function () {
            return this._options;
        },
        set: /**
         * @param {?} options
         * @return {?}
         */
        function (options) {
            this._options = extend(true, this._options, options);
        },
        enumerable: true,
        configurable: true
    });
    //######################### public methods - implementation of DynamicValueHandler #########################
    /**
     * Sets value for NgSelect
     * @param value Value to be set
     */
    //######################### public methods - implementation of DynamicValueHandler #########################
    /**
     * Sets value for NgSelect
     * @param {?} value Value to be set
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype.setValue = 
    //######################### public methods - implementation of DynamicValueHandler #########################
    /**
     * Sets value for NgSelect
     * @param {?} value Value to be set
     * @return {?}
     */
    function (value) {
        this._useOptionsAsValue(value);
    };
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     */
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype.initOptions = /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    function () {
    };
    /**
     * Explicitly runs invalidation of content (change detection)
     */
    /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype.invalidateVisuals = /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    function () {
    };
    /**
     * Loads options
     */
    /**
     * Loads options
     * @protected
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype._loadOptions = /**
     * Loads options
     * @protected
     * @return {?}
     */
    function () {
    };
    /**
     * Converts value to options
     * @param value Value to be changed to options
     */
    /**
     * Converts value to options
     * @protected
     * @param {?} value Value to be changed to options
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype._useOptionsAsValue = /**
     * Converts value to options
     * @protected
     * @param {?} value Value to be changed to options
     * @return {?}
     */
    function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var items, options, _i, items_1, itm, _a, _b, item, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        //set empty value
                        if (isBlank(value) || (Array.isArray(value) && !value.length)) {
                            this.selectedOptions = value;
                            this._clearSelected();
                            this._normalState.invalidateVisuals();
                            this.valueChange.emit();
                            return [2 /*return*/];
                        }
                        if (!this.options.multiple) return [3 /*break*/, 7];
                        if (!Array.isArray(value)) return [3 /*break*/, 5];
                        items = value;
                        options = [];
                        _i = 0, items_1 = items;
                        _d.label = 1;
                    case 1:
                        if (!(_i < items_1.length)) return [3 /*break*/, 4];
                        itm = items_1[_i];
                        _b = (_a = options).push;
                        return [4 /*yield*/, this._loadText(itm)];
                    case 2:
                        _b.apply(_a, [_d.sent()]);
                        _d.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        this.selectedOptions = options;
                        return [3 /*break*/, 6];
                    case 5: throw new Error('Don`t you have redundant "multiple"?');
                    case 6: return [3 /*break*/, 10];
                    case 7:
                        if (!Array.isArray(value)) return [3 /*break*/, 8];
                        throw new Error('Are you missing attribute "multiple"?');
                    case 8:
                        item = value;
                        _c = this;
                        return [4 /*yield*/, this._loadText(item)];
                    case 9:
                        _c.selectedOptions = _d.sent();
                        _d.label = 10;
                    case 10:
                        this._clearSelected();
                        this._markValueAsSelected();
                        this._normalState.invalidateVisuals();
                        this.valueChange.emit();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Loads text for specified value
     * @param value Value that is going to be used for obtaining option
     */
    /**
     * Loads text for specified value
     * @protected
     * @param {?} value Value that is going to be used for obtaining option
     * @return {?}
     */
    DynamicValueHandlerComponent.prototype._loadText = /**
     * Loads text for specified value
     * @protected
     * @param {?} value Value that is going to be used for obtaining option
     * @return {?}
     */
    function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var opts, opt;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.options.dynamicOptionsCallback) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.options.dynamicOptionsCallback(value)];
                    case 1:
                        opts = _a.sent();
                        if (opts && opts.length) {
                            opt = opts[0];
                            opt.value = value;
                            opt.selected = true;
                            return [2 /*return*/, opt];
                        }
                        _a.label = 2;
                    case 2: 
                    //load option from value
                    return [2 /*return*/, (/** @type {?} */ ({
                            selected: true,
                            active: false,
                            value: value,
                            text: this.options.textExtractor(value)
                        }))];
                }
            });
        });
    };
    DynamicValueHandlerComponent.decorators = [
        { type: Component, args: [{
                    selector: "ng-dynamic-value-handler",
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    DynamicValueHandlerComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [NG_SELECT_PLUGIN_INSTANCES,] }, { type: Optional }] },
        { type: ElementRef },
        { type: undefined, decorators: [{ type: Inject, args: [VALUE_HANDLER_OPTIONS,] }, { type: Optional }] }
    ]; };
    return DynamicValueHandlerComponent;
}(ValueHandlerBase));
export { DynamicValueHandlerComponent };
if (false) {
    /**
     * Sets value
     * @type {?}
     * @protected
     */
    DynamicValueHandlerComponent.prototype._setValue;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pY1ZhbHVlSGFuZGxlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvcGx1Z2lucy92YWx1ZUhhbmRsZXIvZHluYW1pYy9keW5hbWljVmFsdWVIYW5kbGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBSS9DLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQzVFLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUUvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7QUFRbEMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLEVBQUwsQ0FBSzs7Ozs7O0lBRjNCLGNBQWMsR0FDcEI7SUFDSSxhQUFhLE1BQWdCO0NBQ2hDOzs7OztBQUtEO0lBTTBELGdEQUE0RDtJQWdCbEgsaUVBQWlFO0lBQ2pFLHNDQUE0RCxlQUF3QyxFQUN4RixhQUF5QixFQUNrQixPQUE0QztRQUZuRyxZQUlJLGtCQUFNLGVBQWUsRUFBRSxhQUFhLENBQUMsU0FHeEM7Ozs7O1FBZ0NTLGVBQVM7Ozs7UUFBRyxVQUFDLE1BQStCO1lBRWxELDZCQUE2QjtZQUM3QixJQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUN4QjtnQkFDSSxJQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFJLENBQUMsZUFBZSxDQUFDLEVBQ3ZDO29CQUNJLEtBQUksQ0FBQyxlQUFlLEdBQUcs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SyxDQUFDLEVBQUE7O3dCQUF2RCxJQUFJLEdBQUcsU0FBZ0Q7d0JBRTNELElBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQ3RCOzRCQUNRLEdBQUcsR0FBNEIsSUFBSSxDQUFDLENBQUMsQ0FBQzs0QkFFMUMsR0FBRyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7NEJBQ2xCLEdBQUcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDOzRCQUVwQixzQkFBTyxHQUFHLEVBQUM7eUJBQ2Q7OztvQkFHTCx3QkFBd0I7b0JBQ3hCLHNCQUFPLG1CQUNQOzRCQUNJLFFBQVEsRUFBRSxJQUFJOzRCQUNkLE1BQU0sRUFBRSxLQUFLOzRCQUNiLEtBQUssRUFBRSxLQUFLOzRCQUNaLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUM7eUJBQzFDLEVBQUEsRUFBQzs7OztLQUNMOztnQkE3TUosU0FBUyxTQUNWO29CQUNJLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLFFBQVEsRUFBRSxFQUFFO29CQUNaLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs7OztnREFrQmdCLE1BQU0sU0FBQywwQkFBMEIsY0FBRyxRQUFRO2dCQTdDQyxVQUFVO2dEQStDdkQsTUFBTSxTQUFDLHFCQUFxQixjQUFHLFFBQVE7O0lBcUx4RCxtQ0FBQztDQUFBLEFBOU1ELENBTTBELGdCQUFnQixHQXdNekU7U0F4TVksNEJBQTRCOzs7Ozs7O0lBd0RyQyxpREErQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIEluamVjdCwgT3B0aW9uYWwsIEVsZW1lbnRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge2V4dGVuZCwgaXNCbGFua30gZnJvbSAnQGFzc2Vjby9jb21tb24nO1xyXG5cclxuaW1wb3J0IHtEeW5hbWljVmFsdWVIYW5kbGVyT3B0aW9ucywgRHluYW1pY1ZhbHVlSGFuZGxlcn0gZnJvbSAnLi9keW5hbWljVmFsdWVIYW5kbGVyLmludGVyZmFjZSc7XHJcbmltcG9ydCB7TmdTZWxlY3RQbHVnaW5JbnN0YW5jZXN9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvc2VsZWN0JztcclxuaW1wb3J0IHtOR19TRUxFQ1RfUExVR0lOX0lOU1RBTkNFU30gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3QvdHlwZXMnO1xyXG5pbXBvcnQge1ZBTFVFX0hBTkRMRVJfT1BUSU9OU30gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQge8m1TmdTZWxlY3RPcHRpb259IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvb3B0aW9uJztcclxuaW1wb3J0IHtWYWx1ZUhhbmRsZXJCYXNlfSBmcm9tICcuLi92YWx1ZUhhbmRsZXJCYXNlJztcclxuXHJcbi8qKlxyXG4gKiBEZWZhdWx0IG9wdGlvbnMgZm9yIHZhbHVlIGhhbmRsZXJcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5jb25zdCBkZWZhdWx0T3B0aW9uczogRHluYW1pY1ZhbHVlSGFuZGxlck9wdGlvbnM8YW55PiA9XHJcbntcclxuICAgIHRleHRFeHRyYWN0b3I6IHZhbHVlID0+IHZhbHVlXHJcbn07XHJcblxyXG4vKipcclxuICogQ29tcG9uZW50IHVzZWQgZm9yIGhhbmRsaW5nIGN1cnJlbnQgdmFsdWUgb2YgTmdTZWxlY3QsIGFsbG93cyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBwcmVzZW50IGluIG9wdGlvbnNcclxuICovXHJcbkBDb21wb25lbnQoXHJcbntcclxuICAgIHNlbGVjdG9yOiBcIm5nLWR5bmFtaWMtdmFsdWUtaGFuZGxlclwiLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIER5bmFtaWNWYWx1ZUhhbmRsZXJDb21wb25lbnQ8VFZhbHVlPiBleHRlbmRzIFZhbHVlSGFuZGxlckJhc2U8VFZhbHVlLCBEeW5hbWljVmFsdWVIYW5kbGVyT3B0aW9uczxUVmFsdWU+PiBpbXBsZW1lbnRzIER5bmFtaWNWYWx1ZUhhbmRsZXI8VFZhbHVlPlxyXG57XHJcbiAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgcHVibGljIHByb3BlcnRpZXMgLSBpbXBsZW1lbnRhdGlvbiBvZiBEeW5hbWljVmFsdWVIYW5kbGVyICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIE9wdGlvbnMgZm9yIE5nU2VsZWN0IHBsdWdpblxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IG9wdGlvbnMoKTogRHluYW1pY1ZhbHVlSGFuZGxlck9wdGlvbnM8VFZhbHVlPlxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vcHRpb25zO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHNldCBvcHRpb25zKG9wdGlvbnM6IER5bmFtaWNWYWx1ZUhhbmRsZXJPcHRpb25zPFRWYWx1ZT4pXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IGV4dGVuZCh0cnVlLCB0aGlzLl9vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgY29uc3RydWN0b3IgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgY29uc3RydWN0b3IoQEluamVjdChOR19TRUxFQ1RfUExVR0lOX0lOU1RBTkNFUykgQE9wdGlvbmFsKCkgbmdTZWxlY3RQbHVnaW5zOiBOZ1NlbGVjdFBsdWdpbkluc3RhbmNlcyxcclxuICAgICAgICAgICAgICAgIHBsdWdpbkVsZW1lbnQ6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgICBASW5qZWN0KFZBTFVFX0hBTkRMRVJfT1BUSU9OUykgQE9wdGlvbmFsKCkgb3B0aW9ucz86IER5bmFtaWNWYWx1ZUhhbmRsZXJPcHRpb25zPFRWYWx1ZT4pXHJcbiAgICB7XHJcbiAgICAgICAgc3VwZXIobmdTZWxlY3RQbHVnaW5zLCBwbHVnaW5FbGVtZW50KTtcclxuXHJcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IGV4dGVuZCh0cnVlLCB7fSwgZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgbWV0aG9kcyAtIGltcGxlbWVudGF0aW9uIG9mIER5bmFtaWNWYWx1ZUhhbmRsZXIgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB2YWx1ZSBmb3IgTmdTZWxlY3RcclxuICAgICAqIEBwYXJhbSB2YWx1ZSBWYWx1ZSB0byBiZSBzZXRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFZhbHVlKHZhbHVlOlRWYWx1ZXxUVmFsdWVbXSk6IHZvaWRcclxuICAgIHtcclxuICAgICAgICB0aGlzLl91c2VPcHRpb25zQXNWYWx1ZSh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplIHBsdWdpbiBvcHRpb25zLCBhbGwgb3BlcmF0aW9ucyByZXF1aXJlZCB0byBiZSBkb25lIHdpdGggcGx1Z2luIG9wdGlvbnMgYXJlIGhhbmRsZWQgaGVyZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaW5pdE9wdGlvbnMoKVxyXG4gICAge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXhwbGljaXRseSBydW5zIGludmFsaWRhdGlvbiBvZiBjb250ZW50IChjaGFuZ2UgZGV0ZWN0aW9uKVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaW52YWxpZGF0ZVZpc3VhbHMoKTogdm9pZFxyXG4gICAge1xyXG4gICAgfVxyXG5cclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwcm90ZWN0ZWQgbWV0aG9kcyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHZhbHVlIFxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgX3NldFZhbHVlID0gKG9wdGlvbjogybVOZ1NlbGVjdE9wdGlvbjxUVmFsdWU+KSA9PlxyXG4gICAge1xyXG4gICAgICAgIC8vbXVsdGlwbGUgdmFsdWVzIGFyZSBhbGxvd2VkXHJcbiAgICAgICAgaWYodGhpcy5vcHRpb25zLm11bHRpcGxlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYoIUFycmF5LmlzQXJyYXkodGhpcy5zZWxlY3RlZE9wdGlvbnMpKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucyA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbGV0IG9wdDogybVOZ1NlbGVjdE9wdGlvbjxUVmFsdWU+O1xyXG5cclxuICAgICAgICAgICAgICAgIC8vdmFsdWUgZXhpc3RzLCByZW1vdmluZyBmcm9tIGxpc3RcclxuICAgICAgICAgICAgICAgIGlmKChvcHQgPSB0aGlzLnNlbGVjdGVkT3B0aW9ucy5maW5kKHNlbE9wdCA9PiB0aGlzLnZhbHVlQ29tcGFyZXIoc2VsT3B0LnZhbHVlLCBvcHQudmFsdWUpKSkpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5zZWxlY3RlZE9wdGlvbnMuaW5kZXhPZihvcHRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25zLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvL2FkZGluZyB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25zLnB1c2gob3B0aW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgLy9vbmx5IHNpZ25sZSB2YWx1ZSBhbGxvd2VkXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucyA9IG9wdGlvbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX2NsZWFyU2VsZWN0ZWQoKTtcclxuICAgICAgICB0aGlzLl9tYXJrVmFsdWVBc1NlbGVjdGVkKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX25vcm1hbFN0YXRlLmludmFsaWRhdGVWaXN1YWxzKCk7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KCk7XHJcblxyXG4gICAgICAgIC8vY2xvc2UgcG9wdXAgaWYgbm90IG11bHRpcGxlXHJcbiAgICAgICAgaWYoIXRoaXMub3B0aW9ucy5tdWx0aXBsZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMucG9wdXBWaXNpYmlsaXR5UmVxdWVzdC5lbWl0KGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5fcG9wdXAuaW52YWxpZGF0ZVZpc3VhbHMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2FkcyBvcHRpb25zXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBfbG9hZE9wdGlvbnMoKVxyXG4gICAge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29udmVydHMgdmFsdWUgdG8gb3B0aW9uc1xyXG4gICAgICogQHBhcmFtIHZhbHVlIFZhbHVlIHRvIGJlIGNoYW5nZWQgdG8gb3B0aW9uc1xyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYXN5bmMgX3VzZU9wdGlvbnNBc1ZhbHVlKHZhbHVlOiBUVmFsdWV8VFZhbHVlW10pXHJcbiAgICB7XHJcbiAgICAgICAgLy9zZXQgZW1wdHkgdmFsdWVcclxuICAgICAgICBpZihpc0JsYW5rKHZhbHVlKSB8fCAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgIXZhbHVlLmxlbmd0aCkpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucyA9IHZhbHVlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fY2xlYXJTZWxlY3RlZCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9ub3JtYWxTdGF0ZS5pbnZhbGlkYXRlVmlzdWFscygpO1xyXG4gICAgICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHRoaXMub3B0aW9ucy5tdWx0aXBsZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmKEFycmF5LmlzQXJyYXkodmFsdWUpKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgaXRlbXMgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIGxldCBvcHRpb25zOiDJtU5nU2VsZWN0T3B0aW9uPFRWYWx1ZT5bXSA9IFtdO1xyXG5cclxuICAgICAgICAgICAgICAgIGZvcihsZXQgaXRtIG9mIGl0ZW1zKVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMucHVzaChhd2FpdCB0aGlzLl9sb2FkVGV4dChpdG0pKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RvbmB0IHlvdSBoYXZlIHJlZHVuZGFudCBcIm11bHRpcGxlXCI/Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYoQXJyYXkuaXNBcnJheSh2YWx1ZSkpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQXJlIHlvdSBtaXNzaW5nIGF0dHJpYnV0ZSBcIm11bHRpcGxlXCI/Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IHZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25zID0gYXdhaXQgdGhpcy5fbG9hZFRleHQoaXRlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX2NsZWFyU2VsZWN0ZWQoKTtcclxuICAgICAgICB0aGlzLl9tYXJrVmFsdWVBc1NlbGVjdGVkKCk7XHJcbiAgICAgICAgdGhpcy5fbm9ybWFsU3RhdGUuaW52YWxpZGF0ZVZpc3VhbHMoKTtcclxuICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWRzIHRleHQgZm9yIHNwZWNpZmllZCB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHZhbHVlIFZhbHVlIHRoYXQgaXMgZ29pbmcgdG8gYmUgdXNlZCBmb3Igb2J0YWluaW5nIG9wdGlvblxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYXN5bmMgX2xvYWRUZXh0KHZhbHVlOiBUVmFsdWUpOiBQcm9taXNlPMm1TmdTZWxlY3RPcHRpb248VFZhbHVlPj5cclxuICAgIHtcclxuICAgICAgICAvL2xvYWQgb3B0aW9uIGR5bmFtaWNhbGx5XHJcbiAgICAgICAgaWYodGhpcy5vcHRpb25zLmR5bmFtaWNPcHRpb25zQ2FsbGJhY2spXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgb3B0cyA9IGF3YWl0IHRoaXMub3B0aW9ucy5keW5hbWljT3B0aW9uc0NhbGxiYWNrKHZhbHVlKTtcclxuXHJcbiAgICAgICAgICAgIGlmKG9wdHMgJiYgb3B0cy5sZW5ndGgpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxldCBvcHQ6IMm1TmdTZWxlY3RPcHRpb248VFZhbHVlPiA9IG9wdHNbMF07XHJcblxyXG4gICAgICAgICAgICAgICAgb3B0LnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICBvcHQuc2VsZWN0ZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBvcHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vbG9hZCBvcHRpb24gZnJvbSB2YWx1ZVxyXG4gICAgICAgIHJldHVybiA8ybVOZ1NlbGVjdE9wdGlvbjxUVmFsdWU+PlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc2VsZWN0ZWQ6IHRydWUsXHJcbiAgICAgICAgICAgIGFjdGl2ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcclxuICAgICAgICAgICAgdGV4dDogdGhpcy5vcHRpb25zLnRleHRFeHRyYWN0b3IodmFsdWUpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSJdfQ==