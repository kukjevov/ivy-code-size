/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, Inject, Optional, ElementRef, ViewChild, EventEmitter } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { NG_SELECT_PLUGIN_INSTANCES } from '../../../components/select/types';
/**
 * Component used for no live search
 */
var NoLiveSearchComponent = /** @class */ (function () {
    //######################### constructor #########################
    function NoLiveSearchComponent(ngSelectPlugins, pluginElement, _document) {
        this.ngSelectPlugins = ngSelectPlugins;
        this.pluginElement = pluginElement;
        this._document = _document;
        /**
         * Current value of live search
         */
        this.searchValue = null;
        /**
         * Occurs when current value of live search changes
         */
        this.searchValueChange = new EventEmitter();
    }
    Object.defineProperty(NoLiveSearchComponent.prototype, "liveSearchElement", {
        /**
         * HTML element that represents live search
         */
        get: /**
         * HTML element that represents live search
         * @return {?}
         */
        function () {
            return this._document.createElement("span");
        },
        enumerable: true,
        configurable: true
    });
    //######################### public methods - implementation of NoLiveSearch #########################
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     */
    //######################### public methods - implementation of NoLiveSearch #########################
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     * @return {?}
     */
    NoLiveSearchComponent.prototype.initialize = 
    //######################### public methods - implementation of NoLiveSearch #########################
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     * @return {?}
     */
    function () {
    };
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     */
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    NoLiveSearchComponent.prototype.initOptions = /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    function () {
    };
    /**
     * Explicitly runs invalidation of content (change detection)
     */
    /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    NoLiveSearchComponent.prototype.invalidateVisuals = /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    function () {
    };
    NoLiveSearchComponent.decorators = [
        { type: Component, args: [{
                    selector: "ng-no-live-search",
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    NoLiveSearchComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [NG_SELECT_PLUGIN_INSTANCES,] }, { type: Optional }] },
        { type: ElementRef },
        { type: HTMLDocument, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    NoLiveSearchComponent.propDecorators = {
        liveSearchElementChild: [{ type: ViewChild, args: ['liveSearchElement',] }]
    };
    return NoLiveSearchComponent;
}());
export { NoLiveSearchComponent };
if (false) {
    /**
     * Options for NgSelect plugin
     * @type {?}
     * @protected
     */
    NoLiveSearchComponent.prototype._options;
    /**
     * Options for NgSelect plugin
     * @type {?}
     */
    NoLiveSearchComponent.prototype.options;
    /**
     * Current value of live search
     * @type {?}
     */
    NoLiveSearchComponent.prototype.searchValue;
    /**
     * Occurs when current value of live search changes
     * @type {?}
     */
    NoLiveSearchComponent.prototype.searchValueChange;
    /**
     * View child that represents live search element
     * \@internal
     * @type {?}
     */
    NoLiveSearchComponent.prototype.liveSearchElementChild;
    /** @type {?} */
    NoLiveSearchComponent.prototype.ngSelectPlugins;
    /** @type {?} */
    NoLiveSearchComponent.prototype.pluginElement;
    /**
     * @type {?}
     * @private
     */
    NoLiveSearchComponent.prototype._document;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9MaXZlU2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wbHVnaW5zL2xpdmVTZWFyY2gvbm8vbm9MaXZlU2VhcmNoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUt6QyxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQzs7OztBQUs1RTtJQWlESSxpRUFBaUU7SUFDakUsK0JBQW1FLGVBQXdDLEVBQ3hGLGFBQXlCLEVBQ04sU0FBdUI7UUFGTSxvQkFBZSxHQUFmLGVBQWUsQ0FBeUI7UUFDeEYsa0JBQWEsR0FBYixhQUFhLENBQVk7UUFDTixjQUFTLEdBQVQsU0FBUyxDQUFjOzs7O1FBbkJ0RCxnQkFBVyxHQUFXLElBQUksQ0FBQzs7OztRQUszQixzQkFBaUIsR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQWdCeEUsQ0FBQztJQTdCRCxzQkFBVyxvREFBaUI7UUFINUI7O1dBRUc7Ozs7O1FBQ0g7WUFFSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELENBQUM7OztPQUFBO0lBNEJELHFHQUFxRztJQUVyRzs7T0FFRzs7Ozs7O0lBQ0ksMENBQVU7Ozs7OztJQUFqQjtJQUVBLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSwyQ0FBVzs7OztJQUFsQjtJQUVBLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSxpREFBaUI7Ozs7SUFBeEI7SUFFQSxDQUFDOztnQkE3RUosU0FBUyxTQUNWO29CQUNJLFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxFQUFFO29CQUNaLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs7OztnREE2Q2dCLE1BQU0sU0FBQywwQkFBMEIsY0FBRyxRQUFRO2dCQTdEQyxVQUFVO2dCQStEbkIsWUFBWSx1QkFBaEQsTUFBTSxTQUFDLFFBQVE7Ozt5Q0FOM0IsU0FBUyxTQUFDLG1CQUFtQjs7SUFnQ2xDLDRCQUFDO0NBQUEsQUE5RUQsSUE4RUM7U0F4RVkscUJBQXFCOzs7Ozs7O0lBTzlCLHlDQUF3Qzs7Ozs7SUFPeEMsd0NBQW9DOzs7OztJQWFwQyw0Q0FBa0M7Ozs7O0lBS2xDLGtEQUF3RTs7Ozs7O0lBUXhFLHVEQUN1RDs7SUFHM0MsZ0RBQStGOztJQUMvRiw4Q0FBZ0M7Ozs7O0lBQ2hDLDBDQUFpRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5qZWN0LCBPcHRpb25hbCwgRWxlbWVudFJlZiwgVmlld0NoaWxkLCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0RPQ1VNRU5UfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5cclxuaW1wb3J0IHtOb0xpdmVTZWFyY2hPcHRpb25zLCBOb0xpdmVTZWFyY2h9IGZyb20gJy4vbm9MaXZlU2VhcmNoLmludGVyZmFjZSc7XHJcbmltcG9ydCB7TmdTZWxlY3RQbHVnaW5HZW5lcmljfSBmcm9tICcuLi8uLi8uLi9taXNjJztcclxuaW1wb3J0IHtOZ1NlbGVjdFBsdWdpbkluc3RhbmNlc30gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9zZWxlY3QnO1xyXG5pbXBvcnQge05HX1NFTEVDVF9QTFVHSU5fSU5TVEFOQ0VTfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC90eXBlcyc7XHJcblxyXG4vKipcclxuICogQ29tcG9uZW50IHVzZWQgZm9yIG5vIGxpdmUgc2VhcmNoXHJcbiAqL1xyXG5AQ29tcG9uZW50KFxyXG57XHJcbiAgICBzZWxlY3RvcjogXCJuZy1uby1saXZlLXNlYXJjaFwiLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIE5vTGl2ZVNlYXJjaENvbXBvbmVudCBpbXBsZW1lbnRzIE5vTGl2ZVNlYXJjaCwgTmdTZWxlY3RQbHVnaW5HZW5lcmljPE5vTGl2ZVNlYXJjaE9wdGlvbnM+XHJcbntcclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwcm90ZWN0ZWQgZmllbGRzICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIE9wdGlvbnMgZm9yIE5nU2VsZWN0IHBsdWdpblxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgX29wdGlvbnM6IE5vTGl2ZVNlYXJjaE9wdGlvbnM7XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBwcm9wZXJ0aWVzIC0gaW1wbGVtZW50YXRpb24gb2YgTm9MaXZlU2VhcmNoICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIE9wdGlvbnMgZm9yIE5nU2VsZWN0IHBsdWdpblxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgb3B0aW9uczogTm9MaXZlU2VhcmNoT3B0aW9ucztcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhUTUwgZWxlbWVudCB0aGF0IHJlcHJlc2VudHMgbGl2ZSBzZWFyY2hcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldCBsaXZlU2VhcmNoRWxlbWVudCgpOiBIVE1MRWxlbWVudFxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEN1cnJlbnQgdmFsdWUgb2YgbGl2ZSBzZWFyY2hcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNlYXJjaFZhbHVlOiBzdHJpbmcgPSBudWxsO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogT2NjdXJzIHdoZW4gY3VycmVudCB2YWx1ZSBvZiBsaXZlIHNlYXJjaCBjaGFuZ2VzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZWFyY2hWYWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPHZvaWQ+ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xyXG5cclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgcHJvcGVydGllcyAtIGNoaWxkcmVuICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIFZpZXcgY2hpbGQgdGhhdCByZXByZXNlbnRzIGxpdmUgc2VhcmNoIGVsZW1lbnRcclxuICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICovXHJcbiAgICBAVmlld0NoaWxkKCdsaXZlU2VhcmNoRWxlbWVudCcpXHJcbiAgICBwdWJsaWMgbGl2ZVNlYXJjaEVsZW1lbnRDaGlsZDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIGNvbnN0cnVjdG9yICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTkdfU0VMRUNUX1BMVUdJTl9JTlNUQU5DRVMpIEBPcHRpb25hbCgpIHB1YmxpYyBuZ1NlbGVjdFBsdWdpbnM6IE5nU2VsZWN0UGx1Z2luSW5zdGFuY2VzLFxyXG4gICAgICAgICAgICAgICAgcHVibGljIHBsdWdpbkVsZW1lbnQ6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgICBASW5qZWN0KERPQ1VNRU5UKSBwcml2YXRlIF9kb2N1bWVudDogSFRNTERvY3VtZW50KVxyXG4gICAge1xyXG4gICAgfVxyXG5cclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgbWV0aG9kcyAtIGltcGxlbWVudGF0aW9uIG9mIE5vTGl2ZVNlYXJjaCAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplIHBsdWdpbiwgdG8gYmUgcmVhZHkgdG8gdXNlLCBpbml0aWFsaXplIGNvbW11bmljYXRpb24gd2l0aCBvdGhlciBwbHVnaW5zXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbml0aWFsaXplKClcclxuICAgIHtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemUgcGx1Z2luIG9wdGlvbnMsIGFsbCBvcGVyYXRpb25zIHJlcXVpcmVkIHRvIGJlIGRvbmUgd2l0aCBwbHVnaW4gb3B0aW9ucyBhcmUgaGFuZGxlZCBoZXJlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbml0T3B0aW9ucygpXHJcbiAgICB7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFeHBsaWNpdGx5IHJ1bnMgaW52YWxpZGF0aW9uIG9mIGNvbnRlbnQgKGNoYW5nZSBkZXRlY3Rpb24pXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbnZhbGlkYXRlVmlzdWFscygpOiB2b2lkXHJcbiAgICB7XHJcbiAgICB9XHJcbn0iXX0=