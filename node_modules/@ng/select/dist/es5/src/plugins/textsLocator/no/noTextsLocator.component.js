/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ElementRef, EventEmitter, Inject, Optional } from "@angular/core";
import { NG_SELECT_PLUGIN_INSTANCES } from '../../../components/select/types';
/**
 * Component used for rendering no texts locator
 */
var NoTextsLocatorComponent = /** @class */ (function () {
    //######################### constructor #########################
    function NoTextsLocatorComponent(ngSelectPlugins, pluginElement) {
        this.ngSelectPlugins = ngSelectPlugins;
        this.pluginElement = pluginElement;
        /**
         * Indication that texts should be obtained again, because they have changed
         */
        this.textsChange = new EventEmitter();
    }
    //######################### public methods - implementation of TextsLocator #########################
    /**
     * Gets text for specified key
     */
    //######################### public methods - implementation of TextsLocator #########################
    /**
     * Gets text for specified key
     * @param {?} key
     * @return {?}
     */
    NoTextsLocatorComponent.prototype.getText = 
    //######################### public methods - implementation of TextsLocator #########################
    /**
     * Gets text for specified key
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return key;
    };
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     */
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     * @return {?}
     */
    NoTextsLocatorComponent.prototype.initialize = /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     * @return {?}
     */
    function () {
    };
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     */
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    NoTextsLocatorComponent.prototype.initOptions = /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     * @return {?}
     */
    function () {
    };
    /**
     * Explicitly runs invalidation of content (change detection)
     */
    /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    NoTextsLocatorComponent.prototype.invalidateVisuals = /**
     * Explicitly runs invalidation of content (change detection)
     * @return {?}
     */
    function () {
    };
    NoTextsLocatorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-no-texts-locator',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    NoTextsLocatorComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [NG_SELECT_PLUGIN_INSTANCES,] }, { type: Optional }] },
        { type: ElementRef }
    ]; };
    return NoTextsLocatorComponent;
}());
export { NoTextsLocatorComponent };
if (false) {
    /**
     * Options for NgSelect plugin
     * @type {?}
     */
    NoTextsLocatorComponent.prototype.options;
    /**
     * Indication that texts should be obtained again, because they have changed
     * @type {?}
     */
    NoTextsLocatorComponent.prototype.textsChange;
    /** @type {?} */
    NoTextsLocatorComponent.prototype.ngSelectPlugins;
    /** @type {?} */
    NoTextsLocatorComponent.prototype.pluginElement;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9UZXh0c0xvY2F0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3BsdWdpbnMvdGV4dHNMb2NhdG9yL25vL25vVGV4dHNMb2NhdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFJN0csT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7Ozs7QUFNNUU7SUFvQkksaUVBQWlFO0lBQ2pFLGlDQUFtRSxlQUF3QyxFQUN4RixhQUF5QjtRQUR1QixvQkFBZSxHQUFmLGVBQWUsQ0FBeUI7UUFDeEYsa0JBQWEsR0FBYixhQUFhLENBQVk7Ozs7UUFKckMsZ0JBQVcsR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQU1sRSxDQUFDO0lBRUQscUdBQXFHO0lBRXJHOztPQUVHOzs7Ozs7O0lBQ0kseUNBQU87Ozs7Ozs7SUFBZCxVQUFlLEdBQVc7UUFFdEIsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0ksNENBQVU7Ozs7SUFBakI7SUFFQSxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0ksNkNBQVc7Ozs7SUFBbEI7SUFFQSxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0ksbURBQWlCOzs7O0lBQXhCO0lBRUEsQ0FBQzs7Z0JBdkRKLFNBQVMsU0FDVjtvQkFDSSxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUsRUFBRTtvQkFDWixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDbEQ7Ozs7Z0RBZ0JnQixNQUFNLFNBQUMsMEJBQTBCLGNBQUcsUUFBUTtnQkEvQmpCLFVBQVU7O0lBa0V0RCw4QkFBQztDQUFBLEFBeERELElBd0RDO1NBbERZLHVCQUF1Qjs7Ozs7O0lBT2hDLDBDQUFzQzs7Ozs7SUFLdEMsOENBQWtFOztJQUd0RCxrREFBK0Y7O0lBQy9GLGdEQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbmplY3QsIE9wdGlvbmFsfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuaW1wb3J0IHtOZ1NlbGVjdFBsdWdpbkdlbmVyaWN9IGZyb20gXCIuLi8uLi8uLi9taXNjXCI7XHJcbmltcG9ydCB7TmdTZWxlY3RQbHVnaW5JbnN0YW5jZXN9IGZyb20gXCIuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdFwiO1xyXG5pbXBvcnQge05HX1NFTEVDVF9QTFVHSU5fSU5TVEFOQ0VTfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3NlbGVjdC90eXBlcyc7XHJcbmltcG9ydCB7Tm9UZXh0c0xvY2F0b3JPcHRpb25zLCBOb1RleHRzTG9jYXRvcn0gZnJvbSBcIi4vbm9UZXh0c0xvY2F0b3IuaW50ZXJmYWNlXCI7XHJcblxyXG4vKipcclxuICogQ29tcG9uZW50IHVzZWQgZm9yIHJlbmRlcmluZyBubyB0ZXh0cyBsb2NhdG9yXHJcbiAqL1xyXG5AQ29tcG9uZW50KFxyXG57XHJcbiAgICBzZWxlY3RvcjogJ25nLW5vLXRleHRzLWxvY2F0b3InLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIE5vVGV4dHNMb2NhdG9yQ29tcG9uZW50IGltcGxlbWVudHMgTm9UZXh0c0xvY2F0b3IsIE5nU2VsZWN0UGx1Z2luR2VuZXJpYzxOb1RleHRzTG9jYXRvck9wdGlvbnM+XHJcbntcclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgcHJvcGVydGllcyAtIGltcGxlbWVudGF0aW9uIG9mIFRleHRzTG9jYXRvciAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBPcHRpb25zIGZvciBOZ1NlbGVjdCBwbHVnaW5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG9wdGlvbnM6IE5vVGV4dHNMb2NhdG9yT3B0aW9ucztcclxuXHJcbiAgICAvKipcclxuICAgICAqIEluZGljYXRpb24gdGhhdCB0ZXh0cyBzaG91bGQgYmUgb2J0YWluZWQgYWdhaW4sIGJlY2F1c2UgdGhleSBoYXZlIGNoYW5nZWRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHRleHRzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIGNvbnN0cnVjdG9yICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTkdfU0VMRUNUX1BMVUdJTl9JTlNUQU5DRVMpIEBPcHRpb25hbCgpIHB1YmxpYyBuZ1NlbGVjdFBsdWdpbnM6IE5nU2VsZWN0UGx1Z2luSW5zdGFuY2VzLFxyXG4gICAgICAgICAgICAgICAgcHVibGljIHBsdWdpbkVsZW1lbnQ6IEVsZW1lbnRSZWYpXHJcbiAgICB7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBtZXRob2RzIC0gaW1wbGVtZW50YXRpb24gb2YgVGV4dHNMb2NhdG9yICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGV4dCBmb3Igc3BlY2lmaWVkIGtleVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0VGV4dChrZXk6IHN0cmluZyk6IHN0cmluZ1xyXG4gICAge1xyXG4gICAgICAgIHJldHVybiBrZXk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplIHBsdWdpbiwgdG8gYmUgcmVhZHkgdG8gdXNlLCBpbml0aWFsaXplIGNvbW11bmljYXRpb24gd2l0aCBvdGhlciBwbHVnaW5zXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbml0aWFsaXplKClcclxuICAgIHtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemUgcGx1Z2luIG9wdGlvbnMsIGFsbCBvcGVyYXRpb25zIHJlcXVpcmVkIHRvIGJlIGRvbmUgd2l0aCBwbHVnaW4gb3B0aW9ucyBhcmUgaGFuZGxlZCBoZXJlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbml0T3B0aW9ucygpXHJcbiAgICB7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFeHBsaWNpdGx5IHJ1bnMgaW52YWxpZGF0aW9uIG9mIGNvbnRlbnQgKGNoYW5nZSBkZXRlY3Rpb24pXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpbnZhbGlkYXRlVmlzdWFscygpOiB2b2lkXHJcbiAgICB7XHJcbiAgICB9XHJcbn0iXX0=