/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Injector } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BrowserModule } from '@angular/platform-browser';
import { createCustomElement } from '@angular/elements';
import { CommonModule as NgCommonModule } from '@ng/common';
import { NgSelectModule, OptionComponent } from '@ng/select';
import { NgSelectElementsComponent } from '../components/ngSelectElements.component';
/**
 * Represents module for WebComponent NgSelect
 */
var NgSelectElementsModule = /** @class */ (function () {
    //######################### constructor #########################
    function NgSelectElementsModule(injector) {
        /** @type {?} */
        var ngOption = createCustomElement(OptionComponent, { injector: injector });
        customElements.define('ng-option', ngOption);
        /** @type {?} */
        var ngSelect = createCustomElement(NgSelectElementsComponent, { injector: injector });
        customElements.define('ng-select', ngSelect);
    }
    //######################### public methods - implementation of DoBootstrap #########################
    /**
     * Called during bootstrapping of module
     */
    //######################### public methods - implementation of DoBootstrap #########################
    /**
     * Called during bootstrapping of module
     * @return {?}
     */
    NgSelectElementsModule.prototype.ngDoBootstrap = 
    //######################### public methods - implementation of DoBootstrap #########################
    /**
     * Called during bootstrapping of module
     * @return {?}
     */
    function () {
    };
    NgSelectElementsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        BrowserModule,
                        CommonModule,
                        NgCommonModule,
                        NgSelectModule
                    ],
                    declarations: [
                        NgSelectElementsComponent
                    ],
                    entryComponents: [
                        NgSelectElementsComponent,
                        OptionComponent
                    ]
                },] }
    ];
    /** @nocollapse */
    NgSelectElementsModule.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return NgSelectElementsModule;
}());
export { NgSelectElementsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdTZWxlY3RFbGVtZW50cy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZWxlbWVudHMvbW9kdWxlcy9uZ1NlbGVjdEVsZW1lbnRzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBZSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsWUFBWSxJQUFJLGNBQWMsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUMxRCxPQUFPLEVBQUMsY0FBYyxFQUFFLGVBQWUsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUUzRCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQzs7OztBQUtuRjtJQXFCSSxpRUFBaUU7SUFDakUsZ0NBQVksUUFBa0I7O1lBRXBCLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsRUFBQyxRQUFRLFVBQUEsRUFBQyxDQUFDO1FBQ2pFLGNBQWMsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDOztZQUV2QyxRQUFRLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLEVBQUUsRUFBQyxRQUFRLFVBQUEsRUFBQyxDQUFDO1FBQzNFLGNBQWMsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxvR0FBb0c7SUFFcEc7O09BRUc7Ozs7OztJQUNJLDhDQUFhOzs7Ozs7SUFBcEI7SUFFQSxDQUFDOztnQkF0Q0osUUFBUSxTQUNUO29CQUNJLE9BQU8sRUFDUDt3QkFDSSxhQUFhO3dCQUNiLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxjQUFjO3FCQUNqQjtvQkFDRCxZQUFZLEVBQ1o7d0JBQ0kseUJBQXlCO3FCQUM1QjtvQkFDRCxlQUFlLEVBQ2Y7d0JBQ0kseUJBQXlCO3dCQUN6QixlQUFlO3FCQUNsQjtpQkFDSjs7OztnQkE5QjhCLFFBQVE7O0lBbUR2Qyw2QkFBQztDQUFBLEFBdkNELElBdUNDO1NBcEJZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGUsIERvQm9vdHN0cmFwLCBJbmplY3Rvcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQge0Jyb3dzZXJNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQge2NyZWF0ZUN1c3RvbUVsZW1lbnR9IGZyb20gJ0Bhbmd1bGFyL2VsZW1lbnRzJztcclxuaW1wb3J0IHtDb21tb25Nb2R1bGUgYXMgTmdDb21tb25Nb2R1bGV9IGZyb20gJ0BuZy9jb21tb24nO1xyXG5pbXBvcnQge05nU2VsZWN0TW9kdWxlLCBPcHRpb25Db21wb25lbnR9IGZyb20gJ0BuZy9zZWxlY3QnO1xyXG5cclxuaW1wb3J0IHtOZ1NlbGVjdEVsZW1lbnRzQ29tcG9uZW50fSBmcm9tICcuLi9jb21wb25lbnRzL25nU2VsZWN0RWxlbWVudHMuY29tcG9uZW50JztcclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIG1vZHVsZSBmb3IgV2ViQ29tcG9uZW50IE5nU2VsZWN0XHJcbiAqL1xyXG5ATmdNb2R1bGUoXHJcbntcclxuICAgIGltcG9ydHM6XHJcbiAgICBbXHJcbiAgICAgICAgQnJvd3Nlck1vZHVsZSxcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTmdDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTmdTZWxlY3RNb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6XHJcbiAgICBbXHJcbiAgICAgICAgTmdTZWxlY3RFbGVtZW50c0NvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czpcclxuICAgIFtcclxuICAgICAgICBOZ1NlbGVjdEVsZW1lbnRzQ29tcG9uZW50LFxyXG4gICAgICAgIE9wdGlvbkNvbXBvbmVudFxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdTZWxlY3RFbGVtZW50c01vZHVsZSBpbXBsZW1lbnRzIERvQm9vdHN0cmFwXHJcbntcclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBjb25zdHJ1Y3RvciAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbiAgICBjb25zdHJ1Y3RvcihpbmplY3RvcjogSW5qZWN0b3IpIFxyXG4gICAge1xyXG4gICAgICAgIGNvbnN0IG5nT3B0aW9uID0gY3JlYXRlQ3VzdG9tRWxlbWVudChPcHRpb25Db21wb25lbnQsIHtpbmplY3Rvcn0pO1xyXG4gICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbmctb3B0aW9uJywgbmdPcHRpb24pO1xyXG5cclxuICAgICAgICBjb25zdCBuZ1NlbGVjdCA9IGNyZWF0ZUN1c3RvbUVsZW1lbnQoTmdTZWxlY3RFbGVtZW50c0NvbXBvbmVudCwge2luamVjdG9yfSk7XHJcbiAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKCduZy1zZWxlY3QnLCBuZ1NlbGVjdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBtZXRob2RzIC0gaW1wbGVtZW50YXRpb24gb2YgRG9Cb290c3RyYXAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIENhbGxlZCBkdXJpbmcgYm9vdHN0cmFwcGluZyBvZiBtb2R1bGVcclxuICAgICAqL1xyXG4gICAgcHVibGljIG5nRG9Cb290c3RyYXAoKVxyXG4gICAge1xyXG4gICAgfVxyXG59Il19