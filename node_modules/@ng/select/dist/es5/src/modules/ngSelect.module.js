/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CommonModule as NgCommonModule } from '@ng/common';
import { NgSelectValuePipe } from '../pipes/ngSelectValue.pipe';
import { NgSelectControlValueAccessor } from '../misc/ngSelectControlValueAccessor.directive';
import { BasicNormalStateComponent } from '../plugins/normalState/basic/basicNormalState.component';
import { NoTextsLocatorComponent } from '../plugins/textsLocator/no/noTextsLocator.component';
import { NoLiveSearchComponent } from '../plugins/liveSearch/no/noLiveSearch.component';
import { BasicLiveSearchComponent } from '../plugins/liveSearch/basic/basicLiveSearch.component';
import { BasicPopupComponent } from '../plugins/popup/basic/basicPopup.component';
import { BasicPositionerComponent } from '../plugins/positioner/basic/basicPositioner.component';
import { BasicKeyboardHandlerComponent } from '../plugins/keyboardHandler/basic/basicKeyboardHandler.component';
import { BasicValueHandlerComponent } from '../plugins/valueHandler/basic/basicValueHandler.component';
import { OptionComponent } from '../components/option/option.component';
import { OptGroupComponent } from '../components/option/optgroup.component';
import { NgSelectComponent } from '../components/select/select.component';
/**
 * Module for select and its options
 */
var NgSelectModule = /** @class */ (function () {
    function NgSelectModule() {
    }
    NgSelectModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        NgCommonModule
                    ],
                    declarations: [
                        OptionComponent,
                        OptGroupComponent,
                        NgSelectComponent,
                        NgSelectValuePipe,
                        NgSelectControlValueAccessor,
                        BasicNormalStateComponent,
                        NoTextsLocatorComponent,
                        NoLiveSearchComponent,
                        BasicLiveSearchComponent,
                        BasicPopupComponent,
                        BasicPositionerComponent,
                        BasicKeyboardHandlerComponent,
                        BasicValueHandlerComponent
                    ],
                    exports: [
                        OptionComponent,
                        OptGroupComponent,
                        NgSelectComponent,
                        NgSelectValuePipe,
                        NgSelectControlValueAccessor
                    ],
                    entryComponents: [
                        BasicNormalStateComponent,
                        NoTextsLocatorComponent,
                        NoLiveSearchComponent,
                        BasicLiveSearchComponent,
                        BasicPopupComponent,
                        BasicPositionerComponent,
                        BasicKeyboardHandlerComponent,
                        BasicValueHandlerComponent
                    ]
                },] }
    ];
    return NgSelectModule;
}());
export { NgSelectModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdTZWxlY3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvbmdTZWxlY3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsWUFBWSxJQUFJLGNBQWMsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUUxRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSxnREFBZ0QsQ0FBQztBQUM1RixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSx5REFBeUQsQ0FBQztBQUNsRyxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSxxREFBcUQsQ0FBQztBQUM1RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUN0RixPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSx1REFBdUQsQ0FBQztBQUMvRixPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNoRixPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSx1REFBdUQsQ0FBQztBQUMvRixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxpRUFBaUUsQ0FBQztBQUM5RyxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSwyREFBMkQsQ0FBQztBQUNyRyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDdEUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFDMUUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7Ozs7QUFLeEU7SUFBQTtJQTZDQSxDQUFDOztnQkE3Q0EsUUFBUSxTQUNUO29CQUNJLE9BQU8sRUFDUDt3QkFDSSxZQUFZO3dCQUNaLGNBQWM7cUJBQ2pCO29CQUNELFlBQVksRUFDWjt3QkFDSSxlQUFlO3dCQUNmLGlCQUFpQjt3QkFDakIsaUJBQWlCO3dCQUNqQixpQkFBaUI7d0JBQ2pCLDRCQUE0Qjt3QkFDNUIseUJBQXlCO3dCQUN6Qix1QkFBdUI7d0JBQ3ZCLHFCQUFxQjt3QkFDckIsd0JBQXdCO3dCQUN4QixtQkFBbUI7d0JBQ25CLHdCQUF3Qjt3QkFDeEIsNkJBQTZCO3dCQUM3QiwwQkFBMEI7cUJBQzdCO29CQUNELE9BQU8sRUFDUDt3QkFDSSxlQUFlO3dCQUNmLGlCQUFpQjt3QkFDakIsaUJBQWlCO3dCQUNqQixpQkFBaUI7d0JBQ2pCLDRCQUE0QjtxQkFDL0I7b0JBQ0QsZUFBZSxFQUNmO3dCQUNJLHlCQUF5Qjt3QkFDekIsdUJBQXVCO3dCQUN2QixxQkFBcUI7d0JBQ3JCLHdCQUF3Qjt3QkFDeEIsbUJBQW1CO3dCQUNuQix3QkFBd0I7d0JBQ3hCLDZCQUE2Qjt3QkFDN0IsMEJBQTBCO3FCQUM3QjtpQkFDSjs7SUFHRCxxQkFBQztDQUFBLEFBN0NELElBNkNDO1NBRlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHtDb21tb25Nb2R1bGUgYXMgTmdDb21tb25Nb2R1bGV9IGZyb20gJ0BuZy9jb21tb24nO1xyXG5cclxuaW1wb3J0IHtOZ1NlbGVjdFZhbHVlUGlwZX0gZnJvbSAnLi4vcGlwZXMvbmdTZWxlY3RWYWx1ZS5waXBlJztcclxuaW1wb3J0IHtOZ1NlbGVjdENvbnRyb2xWYWx1ZUFjY2Vzc29yfSBmcm9tICcuLi9taXNjL25nU2VsZWN0Q29udHJvbFZhbHVlQWNjZXNzb3IuZGlyZWN0aXZlJztcclxuaW1wb3J0IHtCYXNpY05vcm1hbFN0YXRlQ29tcG9uZW50fSBmcm9tICcuLi9wbHVnaW5zL25vcm1hbFN0YXRlL2Jhc2ljL2Jhc2ljTm9ybWFsU3RhdGUuY29tcG9uZW50JztcclxuaW1wb3J0IHtOb1RleHRzTG9jYXRvckNvbXBvbmVudH0gZnJvbSAnLi4vcGx1Z2lucy90ZXh0c0xvY2F0b3Ivbm8vbm9UZXh0c0xvY2F0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHtOb0xpdmVTZWFyY2hDb21wb25lbnR9IGZyb20gJy4uL3BsdWdpbnMvbGl2ZVNlYXJjaC9uby9ub0xpdmVTZWFyY2guY29tcG9uZW50JztcclxuaW1wb3J0IHtCYXNpY0xpdmVTZWFyY2hDb21wb25lbnR9IGZyb20gJy4uL3BsdWdpbnMvbGl2ZVNlYXJjaC9iYXNpYy9iYXNpY0xpdmVTZWFyY2guY29tcG9uZW50JztcclxuaW1wb3J0IHtCYXNpY1BvcHVwQ29tcG9uZW50fSBmcm9tICcuLi9wbHVnaW5zL3BvcHVwL2Jhc2ljL2Jhc2ljUG9wdXAuY29tcG9uZW50JztcclxuaW1wb3J0IHtCYXNpY1Bvc2l0aW9uZXJDb21wb25lbnR9IGZyb20gJy4uL3BsdWdpbnMvcG9zaXRpb25lci9iYXNpYy9iYXNpY1Bvc2l0aW9uZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHtCYXNpY0tleWJvYXJkSGFuZGxlckNvbXBvbmVudH0gZnJvbSAnLi4vcGx1Z2lucy9rZXlib2FyZEhhbmRsZXIvYmFzaWMvYmFzaWNLZXlib2FyZEhhbmRsZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHtCYXNpY1ZhbHVlSGFuZGxlckNvbXBvbmVudH0gZnJvbSAnLi4vcGx1Z2lucy92YWx1ZUhhbmRsZXIvYmFzaWMvYmFzaWNWYWx1ZUhhbmRsZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHtPcHRpb25Db21wb25lbnR9IGZyb20gJy4uL2NvbXBvbmVudHMvb3B0aW9uL29wdGlvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQge09wdEdyb3VwQ29tcG9uZW50fSBmcm9tICcuLi9jb21wb25lbnRzL29wdGlvbi9vcHRncm91cC5jb21wb25lbnQnO1xyXG5pbXBvcnQge05nU2VsZWN0Q29tcG9uZW50fSBmcm9tICcuLi9jb21wb25lbnRzL3NlbGVjdC9zZWxlY3QuY29tcG9uZW50JztcclxuXHJcbi8qKlxyXG4gKiBNb2R1bGUgZm9yIHNlbGVjdCBhbmQgaXRzIG9wdGlvbnNcclxuICovXHJcbkBOZ01vZHVsZShcclxue1xyXG4gICAgaW1wb3J0czpcclxuICAgIFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTmdDb21tb25Nb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6XHJcbiAgICBbXHJcbiAgICAgICAgT3B0aW9uQ29tcG9uZW50LFxyXG4gICAgICAgIE9wdEdyb3VwQ29tcG9uZW50LFxyXG4gICAgICAgIE5nU2VsZWN0Q29tcG9uZW50LFxyXG4gICAgICAgIE5nU2VsZWN0VmFsdWVQaXBlLFxyXG4gICAgICAgIE5nU2VsZWN0Q29udHJvbFZhbHVlQWNjZXNzb3IsXHJcbiAgICAgICAgQmFzaWNOb3JtYWxTdGF0ZUNvbXBvbmVudCxcclxuICAgICAgICBOb1RleHRzTG9jYXRvckNvbXBvbmVudCxcclxuICAgICAgICBOb0xpdmVTZWFyY2hDb21wb25lbnQsXHJcbiAgICAgICAgQmFzaWNMaXZlU2VhcmNoQ29tcG9uZW50LFxyXG4gICAgICAgIEJhc2ljUG9wdXBDb21wb25lbnQsXHJcbiAgICAgICAgQmFzaWNQb3NpdGlvbmVyQ29tcG9uZW50LFxyXG4gICAgICAgIEJhc2ljS2V5Ym9hcmRIYW5kbGVyQ29tcG9uZW50LFxyXG4gICAgICAgIEJhc2ljVmFsdWVIYW5kbGVyQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czpcclxuICAgIFtcclxuICAgICAgICBPcHRpb25Db21wb25lbnQsXHJcbiAgICAgICAgT3B0R3JvdXBDb21wb25lbnQsXHJcbiAgICAgICAgTmdTZWxlY3RDb21wb25lbnQsXHJcbiAgICAgICAgTmdTZWxlY3RWYWx1ZVBpcGUsXHJcbiAgICAgICAgTmdTZWxlY3RDb250cm9sVmFsdWVBY2Nlc3NvclxyXG4gICAgXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czpcclxuICAgIFtcclxuICAgICAgICBCYXNpY05vcm1hbFN0YXRlQ29tcG9uZW50LFxyXG4gICAgICAgIE5vVGV4dHNMb2NhdG9yQ29tcG9uZW50LFxyXG4gICAgICAgIE5vTGl2ZVNlYXJjaENvbXBvbmVudCxcclxuICAgICAgICBCYXNpY0xpdmVTZWFyY2hDb21wb25lbnQsXHJcbiAgICAgICAgQmFzaWNQb3B1cENvbXBvbmVudCxcclxuICAgICAgICBCYXNpY1Bvc2l0aW9uZXJDb21wb25lbnQsXHJcbiAgICAgICAgQmFzaWNLZXlib2FyZEhhbmRsZXJDb21wb25lbnQsXHJcbiAgICAgICAgQmFzaWNWYWx1ZUhhbmRsZXJDb21wb25lbnRcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nU2VsZWN0TW9kdWxlXHJcbntcclxufSJdfQ==