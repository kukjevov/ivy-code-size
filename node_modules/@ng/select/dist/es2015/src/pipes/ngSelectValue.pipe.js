/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isBlank } from '@asseco/common';
/**
 * Pipe to transform ng select selected option into
 * @template TValue
 */
export class NgSelectValuePipe {
    //######################### public methods #########################
    /**
     * Transforms selected option into string
     * @param {?} options Selected options to be transformed into text
     * @param {?} nothingSelectedText Text displayed if nothing is selected
     * @return {?}
     */
    transform(options, nothingSelectedText) {
        if (isBlank(options) || (Array.isArray(options) && !options.length)) {
            return nothingSelectedText;
        }
        if (Array.isArray(options)) {
            return options.map((/**
             * @param {?} option
             * @return {?}
             */
            option => option.text)).join(', ');
        }
        return options.text;
    }
}
NgSelectValuePipe.decorators = [
    { type: Pipe, args: [{ name: 'ngSelectValue' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdTZWxlY3RWYWx1ZS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3BpcGVzL25nU2VsZWN0VmFsdWUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7OztBQVF2QyxNQUFNLE9BQU8saUJBQWlCOzs7Ozs7OztJQVNuQixTQUFTLENBQUMsT0FBNkQsRUFBRSxtQkFBMkI7UUFFdkcsSUFBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUNsRTtZQUNJLE9BQU8sbUJBQW1CLENBQUM7U0FDOUI7UUFFRCxJQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQ3pCO1lBQ0ksT0FBTyxPQUFPLENBQUMsR0FBRzs7OztZQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksRUFBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN4RDtRQUVELE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQztJQUN4QixDQUFDOzs7WUF2QkosSUFBSSxTQUFDLEVBQUMsSUFBSSxFQUFFLGVBQWUsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGlwZSwgUGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7aXNCbGFua30gZnJvbSAnQGFzc2Vjby9jb21tb24nO1xyXG5cclxuaW1wb3J0IHtOZ1NlbGVjdE9wdGlvbn0gZnJvbSAnLi4vY29tcG9uZW50cy9vcHRpb24nO1xyXG5cclxuLyoqXHJcbiAqIFBpcGUgdG8gdHJhbnNmb3JtIG5nIHNlbGVjdCBzZWxlY3RlZCBvcHRpb24gaW50b1xyXG4gKi9cclxuQFBpcGUoe25hbWU6ICduZ1NlbGVjdFZhbHVlJ30pXHJcbmV4cG9ydCBjbGFzcyBOZ1NlbGVjdFZhbHVlUGlwZTxUVmFsdWU+IGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybVxyXG57XHJcbiAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgcHVibGljIG1ldGhvZHMgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zZm9ybXMgc2VsZWN0ZWQgb3B0aW9uIGludG8gc3RyaW5nXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBTZWxlY3RlZCBvcHRpb25zIHRvIGJlIHRyYW5zZm9ybWVkIGludG8gdGV4dFxyXG4gICAgICogQHBhcmFtIG5vdGhpbmdTZWxlY3RlZFRleHQgVGV4dCBkaXNwbGF5ZWQgaWYgbm90aGluZyBpcyBzZWxlY3RlZFxyXG4gICAgICovICAgXHJcbiAgICBwdWJsaWMgdHJhbnNmb3JtKG9wdGlvbnM6IE5nU2VsZWN0T3B0aW9uPFRWYWx1ZT58QXJyYXk8TmdTZWxlY3RPcHRpb248VFZhbHVlPj4sIG5vdGhpbmdTZWxlY3RlZFRleHQ6IHN0cmluZyk6IHN0cmluZ1xyXG4gICAge1xyXG4gICAgICAgIGlmKGlzQmxhbmsob3B0aW9ucykgfHwgKEFycmF5LmlzQXJyYXkob3B0aW9ucykgJiYgIW9wdGlvbnMubGVuZ3RoKSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiBub3RoaW5nU2VsZWN0ZWRUZXh0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoQXJyYXkuaXNBcnJheShvcHRpb25zKSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zLm1hcChvcHRpb24gPT4gb3B0aW9uLnRleHQpLmpvaW4oJywgJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gb3B0aW9ucy50ZXh0O1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0=