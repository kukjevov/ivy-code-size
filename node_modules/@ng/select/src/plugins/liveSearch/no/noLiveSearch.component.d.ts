import { ElementRef, EventEmitter } from '@angular/core';
import { NoLiveSearchOptions, NoLiveSearch } from './noLiveSearch.interface';
import { NgSelectPluginGeneric } from '../../../misc';
import { NgSelectPluginInstances } from '../../../components/select';
/**
 * Component used for no live search
 */
export declare class NoLiveSearchComponent implements NoLiveSearch, NgSelectPluginGeneric<NoLiveSearchOptions> {
    ngSelectPlugins: NgSelectPluginInstances;
    pluginElement: ElementRef;
    private _document;
    /**
     * Options for NgSelect plugin
     */
    protected _options: NoLiveSearchOptions;
    /**
     * Options for NgSelect plugin
     */
    options: NoLiveSearchOptions;
    /**
     * HTML element that represents live search
     */
    readonly liveSearchElement: HTMLElement;
    /**
     * Current value of live search
     */
    searchValue: string;
    /**
     * Occurs when current value of live search changes
     */
    searchValueChange: EventEmitter<void>;
    /**
     * View child that represents live search element
     * @internal
     */
    liveSearchElementChild: ElementRef<HTMLElement>;
    constructor(ngSelectPlugins: NgSelectPluginInstances, pluginElement: ElementRef, _document: HTMLDocument);
    /**
     * Initialize plugin, to be ready to use, initialize communication with other plugins
     */
    initialize(): void;
    /**
     * Initialize plugin options, all operations required to be done with plugin options are handled here
     */
    initOptions(): void;
    /**
     * Explicitly runs invalidation of content (change detection)
     */
    invalidateVisuals(): void;
}
