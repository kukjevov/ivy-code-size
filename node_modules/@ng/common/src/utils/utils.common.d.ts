import { NgModuleRef, InjectionToken } from "@angular/core";
/**
 * Method used for extraction of resolve method for promise
 * @param appStablePromise Promise which contains resolve method that is going to be extracted
 */
export declare function extractAppStableResolve(appStablePromise: Promise<void>): () => void;
/**
 * Factory used for creating APP_STABLE promise
 */
export declare function appStablePromiseFactory(): Promise<void>;
/**
 * Injection token used for obtaining promise that is resolved when application is first time stable
 */
export declare const APP_STABLE: InjectionToken<Promise<void>>;
/**
 * Common utility methods
 */
export default class Common {
    /**
     * Runs callback function when angular module is bootstrapped and stable
     * @param moduleRefPromise Promise for module that was bootstrapped
     * @param callback Callback that is called
     * @param angularProfiler Indication that angular profiler should be enabled
     */
    static runWhenModuleStable(moduleRefPromise: Promise<NgModuleRef<{}>>, callback: (moduleRef: NgModuleRef<{}>) => void, angularProfiler?: boolean): void;
}
