import { ProgressIndicatorOptions } from './progressIndicatorOptions';
import { Observable } from 'rxjs';
/**
 * Service that is used for displaying and hiding progress indicator
 */
export declare class ProgressIndicatorService {
    config?: ProgressIndicatorOptions;
    /**
     * Indication that current code is running in browser
     */
    private _isBrowser;
    /**
     * Id of running timeout
     */
    private _timeout;
    /**
     * Number of running requests
     */
    private _runningRequests;
    /**
     * Used for invoking event runningChanged
     */
    private _runningChanged;
    /**
     * Indication that progress indicator is running
     */
    running: boolean;
    /**
     * Occurs when 'running' changes
     */
    readonly runningChanged: Observable<boolean>;
    constructor(platformId: Object, config?: ProgressIndicatorOptions);
    /**
     * Displays progress indicator after short delay
     */
    showProgress(): void;
    /**
     * Hides progress indicator
     * @param force Indication that indicator should be hidden even if some processes are running
     */
    hideProgress(force?: boolean): void;
    /**
     * Used for invoking 'runningChanged' event
     */
    private _onRunning;
}
