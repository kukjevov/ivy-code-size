/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Service used for transfering http status code for response
 */
export class StatusCodeService {
    //######################### public properties #########################
    /**
     * Gets current status code
     * @return {?}
     */
    get statusCode() {
        return this._statusCode;
    }
    //######################### public methods #########################
    /**
     * Sets current status code
     * @param {?=} code Status code value that will be set
     * @return {?}
     */
    setStatusCode(code) {
        this._statusCode = code;
    }
}
StatusCodeService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ StatusCodeService.ngInjectableDef = i0.defineInjectable({ factory: function StatusCodeService_Factory() { return new StatusCodeService(); }, token: StatusCodeService, providedIn: "root" });
if (false) {
    /**
     * Current status code
     * @type {?}
     * @private
     */
    StatusCodeService.prototype._statusCode;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHVzQ29kZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3NlcnZpY2VzL3N0YXR1c0NvZGUvc3RhdHVzQ29kZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7OztBQU16QyxNQUFNLE9BQU8saUJBQWlCOzs7Ozs7SUFjMUIsSUFBVyxVQUFVO1FBRWpCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM1QixDQUFDOzs7Ozs7O0lBUU0sYUFBYSxDQUFDLElBQWE7UUFFOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7O1lBN0JKLFVBQVUsU0FBQyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUM7Ozs7Ozs7OztJQVE1Qix3Q0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIFNlcnZpY2UgdXNlZCBmb3IgdHJhbnNmZXJpbmcgaHR0cCBzdGF0dXMgY29kZSBmb3IgcmVzcG9uc2VcclxuICovXHJcbkBJbmplY3RhYmxlKHtwcm92aWRlZEluOiAncm9vdCd9KVxyXG5leHBvcnQgY2xhc3MgU3RhdHVzQ29kZVNlcnZpY2Vcclxue1xyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHByaXZhdGUgZmllbGRzICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiBDdXJyZW50IHN0YXR1cyBjb2RlXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgX3N0YXR1c0NvZGU/OiBudW1iZXI7XHJcblxyXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIHB1YmxpYyBwcm9wZXJ0aWVzICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgY3VycmVudCBzdGF0dXMgY29kZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IHN0YXR1c0NvZGUoKTogbnVtYmVyIHwgbnVsbCB8IHVuZGVmaW5lZFxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zdGF0dXNDb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBwdWJsaWMgbWV0aG9kcyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIGN1cnJlbnQgc3RhdHVzIGNvZGVcclxuICAgICAqIEBwYXJhbSBjb2RlIFN0YXR1cyBjb2RlIHZhbHVlIHRoYXQgd2lsbCBiZSBzZXRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFN0YXR1c0NvZGUoY29kZT86IG51bWJlcilcclxuICAgIHtcclxuICAgICAgICB0aGlzLl9zdGF0dXNDb2RlID0gY29kZTtcclxuICAgIH1cclxufSJdfQ==