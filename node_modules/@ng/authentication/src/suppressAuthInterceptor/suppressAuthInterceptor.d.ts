import { ClassProvider } from '@angular/core';
import { HttpInterceptor, HttpEvent, HttpHandler } from '@angular/common/http';
import { IgnoredInterceptorsService, HttpRequestIgnoredInterceptorId } from '@ng/common';
import { Observable } from 'rxjs';
/**
 * SuppressAuthInterceptor used for intercepting http responses and suppressing 401, 403 statuses
 */
export declare class SuppressAuthInterceptor implements HttpInterceptor {
    private _ignoredInterceptorsService;
    constructor(_ignoredInterceptorsService: IgnoredInterceptorsService);
    /**
     * Intercepts http request
     * @param req Request to be intercepted
     * @param next Next middleware that can be called for next processing
     */
    intercept(req: HttpRequestIgnoredInterceptorId<any>, next: HttpHandler): Observable<HttpEvent<any>>;
}
/**
 * Provider for proper use of SuppressAuthInterceptor, use this provider to inject this interceptor
 */
export declare const SUPPRESS_AUTH_INTERCEPTOR_PROVIDER: ClassProvider;
