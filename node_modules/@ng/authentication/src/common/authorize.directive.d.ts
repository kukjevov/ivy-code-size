import { TemplateRef, ViewContainerRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { AuthenticationService } from './authentication.service';
export declare class AuthorizeDirective implements OnInit, OnDestroy {
    private _template;
    private _viewContainer;
    private _authService;
    private _changeDetector;
    /**
     * Subscription for changes in authentication
     */
    private _subscription;
    /**
     * Name of permission that is requested for displaying element
     */
    permission: string | string[];
    /**
     * Indication that AND condition should be used instead of OR condition if multiple permissions are provided
     */
    andCondition: boolean;
    /**
     * Indication that provided string is set of loggical operations among permission names, if this is true andCondition is ignored
     */
    conditionString: boolean;
    constructor(_template: TemplateRef<any>, _viewContainer: ViewContainerRef, _authService: AuthenticationService<any>, _changeDetector: ChangeDetectorRef);
    /**
     * Initialize component
     */
    ngOnInit(): void;
    /**
     * Called when component is destroyed
     */
    ngOnDestroy(): void;
    /**
     * Renders content if user has permissions
     */
    private _renderIfPermission;
}
